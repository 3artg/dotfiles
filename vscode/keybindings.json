// Place your key bindings in this file to override the defaultsauto[]
[
  // File Explorer
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },

  // No Recently Used Files
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },

  // Ctrl <-> Alt
  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "ctrl+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.lastEditorInGroup"
  },
  {
    "key": "alt+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "alt+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "alt+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },


  // Easy Switch Settings <-> settings.json
  {
    "key": "ctrl+oem_comma",
    "command": "settings.switchToJSON",
    "when": "inSettingsEditor"
  },
  {
    "key": "ctrl+oem_comma",
    "command": "workbench.action.openGlobalKeybindingsFile",
    "when": "inKeybindings"
  },
  {
    "key": "ctrl+oem_comma",
    "command": "workbench.action.openGlobalKeybindings",
    "when": "resourceFilename == keybindings.json"
  },

  // Vim
  {
    "key": "ctrl+s",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
            "extension.vim_escape",
            "workbench.action.files.save",
            "extension.vim_right"
        ]
    },
    "when": "editorTextFocus && vim.active && !inDebugRepl",
    // "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Insert'"
  },

  // Vim

  // vscode-neovim
  // {
  //   "command": "-vscode-neovim.send",
  //   "key": "ctrl+k"
  // },
  // {
  //   "command": "-vscode-neovim.send",
  //   "key": "ctrl+z"
  // },
  {
    "command": "extension.multiCommand.execute",
    "args": { 
       "sequence": [
            "vscode-neovim.escape",
            "workbench.action.files.save"
        ]
    },
    "key": "ctrl+s",
    "when": "neovim.mode == insert && editorTextFocus"
  },
  {
    "command": "vscode-neovim.compositeEscape1",
    "key": "j",
    "when": "neovim.mode == insert && editorTextFocus",
    "args": "j"
  },
  {
    "command": "vscode-neovim.compositeEscape2",
    "key": "k",
    "when": "neovim.mode == insert && editorTextFocus",
    "args": "k"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "shift+alt+q",
    "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },

  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "alt+oem_3",
    "command": "workbench.action.compareEditor.focusOtherSide"
  },
  {
    "key": "ctrl+alt+v",
    "command": "toggleVim"
  },

  {
    "key": "f5",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\u0015run '${file}'\u000D"
    },
    "when": "terminalFocus",
  },

  {
    "key": "f5",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
            "workbench.action.files.save",
            "workbench.action.terminal.toggleTerminal",
            {
              "command": "workbench.action.terminal.sendSequence",
              "args": {
                "text": "\u0015run '${file}'\u000D"
              },
            }
        ]
    },
    "when": "!terminalFocus",
  },
  {
    "key": "shift+f5",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  }
] 
